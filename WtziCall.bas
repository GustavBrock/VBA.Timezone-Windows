Attribute VB_Name = "WtziCall"
Option Compare Database
Option Explicit

' Required modules:
'   ByteUtil
'   DateUtil (or modules from project VBA.Date)
'   WtziBase
'   WtziCore

' Required references:
'   Windows Script Host Object Model


' Common constants.

    ' Default column width.
    Private Const DefaultColumnWidth    As Integer = -1
    ' Hidden column width.
    Private Const HiddenColumnWidth     As Integer = 0
'

' Callback function to list the timezones of Windows.
'
' Example for retrieval of selected value:
'
'   Dim TimezoneName    As String
'   TimezoneName = Me!ControlName.Value
'
' Typical settings for combobox or listbox:
'
'   ControlSource:  Bound or unbound
'   RowSource:      Leave empty
'   RowSourceType:  CallWindowsTimezones
'   BoundColumn:    1
'   LimitToList:    Yes
'   AllowEditing:   No
'   Format:         A valid format for date values
'   ColumnHeads:    True or False. If True, do specify constant Headers
'   ColumnCount:    Don't care. Will be set by the function
'   ColumnWidths:   Don't care. Will be overridden by the function
'
' 2020-02-27. Cactus Data ApS, CPH.
'
Public Function CallWindowsTimezones( _
    Control As Control, _
    Id As Long, _
    Row As Long, _
    Column As Long, _
    Code As Integer) _
    As Variant

    ' Fixed constants.
    '
    ' Count of columns in the control.
    '   0: Key. Name of the timezone.
    '   1: Mui.
    '   2: Custom display.
    Const ColumnCount   As Integer = 3
    
    ' Customisable constants.
    '
    ' Separator for use in Headers.
    Const Separator     As String = ";"
    ' Count of items in Headers must match ColumnCount.
    Const Headers       As String = "Name" & Separator & "Mui" & Separator & "Timezone offset and locations"
    
    Static ColumnWidth(0 To ColumnCount - 1) As Integer
    Static RowCount     As Integer
    Static Entries()    As TimezoneEntry
    
    Dim Entry           As TimezoneEntry
    Dim Value           As Variant
    
    Select Case Code
        Case acLBInitialize
            ' Control settings.
            Control.ColumnCount = ColumnCount   ' Set the column count of the control.
            ColumnWidth(0) = HiddenColumnWidth  ' Hide the bound (value) column.
            ColumnWidth(1) = HiddenColumnWidth  ' Hide the Mui column.
            ColumnWidth(2) = DefaultColumnWidth ' Set the width of the display column to the default width.
            
            ' Value settings.
            If RowCount > 0 Then
                ' Entries has been retrieved.
            Else
                Entries = RegistryTimezoneItems()
                SortEntriesBiasLocations Entries
                ' Count of rows to display including column headings.
                RowCount = 1 + UBound(Entries) + Abs(Control.ColumnHeads)
            End If
            
            ' Initialize.
            Value = True                        ' True to initialize.
        Case acLBOpen
            Value = Timer                       ' Autogenerated unique ID.
        Case acLBGetRowCount                    ' Get count of rows.
            Value = RowCount                    ' Set count of rows.
        Case acLBGetColumnCount                 ' Get count of columns.
            Value = ColumnCount                 ' Set count of columns.
        Case acLBGetColumnWidth                 ' Get the column width.
            Value = ColumnWidth(Column)         ' Use preset column widths.
        Case acLBGetValue                       ' Get the data for each row and column.
            If Control.ColumnHeads = True And Row = 0 Then
                ' Display a header.
                Value = Split(Headers, Separator)(Column)
            Else
                ' Display a value.
                Entry = Entries(Row - Abs(Control.ColumnHeads))
                Select Case Column
                    Case 0
                        Value = Entry.Name
                    Case 1
                        Value = Entry.Mui
                    Case 2
                        Value = FormatBias(Entry.Bias, True, True, Entry.Name) & " " & Entry.Locations
                End Select
            End If
        Case acLBGetFormat                      ' Format the data.
            ' Use default (standard) format.    ' Apply the value or display format.
        Case acLBClose                          ' The form closes or the control is requeried.
            ' no-op.
        Case acLBEnd                            ' The form closes or the control is requeried.
            ' no-op.
    End Select
    
    ' Return Value.
    CallWindowsTimezones = Value

End Function




